(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,,,function(e,t,n){e.exports=n(24)},,,,,function(e,t,n){},,function(e,t,n){},,function(e,t,n){},,function(e,t,n){},,function(e,t,n){},,function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),i=n(8),s=n.n(i),l=(n(14),n(1)),o=n(2),c=n(4),u=n(3),h=n(5),d=(n(16),function(e){function t(){return Object(l.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(o.a)(t,[{key:"render",value:function(){return a.a.createElement("header",{className:"App-header"},a.a.createElement("div",{className:"home-link"},a.a.createElement("h1",{className:"title"},"MST Algorithms")))}}]),t}(r.Component)),g=function(e){function t(){return Object(l.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(o.a)(t,[{key:"render",value:function(){return a.a.createElement("div",{style:{width:"80%",maxWidth:"1120px",alignSelf:"center",flexGrow:1}},this.props.children)}}]),t}(r.Component),f=(n(18),function(e){var t=e.onClick,n=e.label,r=void 0===n?"Label":n;return a.a.createElement("button",{className:"button",onClick:t},r)}),m=function(e){function t(){return Object(l.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(o.a)(t,[{key:"render",value:function(){var e=this.props,t=e.algorithms,n=e.selectedAlgorithm,r=e.onSelect,i=e.onConfirm;return a.a.createElement("div",null,a.a.createElement("h2",null,n.length>0?n:"Select an Algorithm"),a.a.createElement("div",{className:"buttonarea"},t.map(function(e){return a.a.createElement(f,{key:e,onClick:r(e),label:e})}),n&&a.a.createElement(f,{onClick:i,label:"Next"})))}}]),t}(r.Component),y=function(e){function t(){return Object(l.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(o.a)(t,[{key:"render",value:function(){var e,t=a.a.createElement("div",{className:"content"},a.a.createElement("h2",null,"Prim's Algorithm"),a.a.createElement("p",null,"Prim's algorithm finds a Minimum Spanning Tree (MST) by starting with a seed vertex, and greedily selecting edges with the lowest cost that connect the component containing the seed to the graph's other components. The algorithm is complete once all of the nodes are connected."),a.a.createElement("p",null,"More detailed info can be found"," ",a.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Prim%27s_algorithm",target:"blank"},"here")),a.a.createElement("p",null,"Here we've selected ",a.a.createElement("strong",null,"A")," as the seed. Click below to get started.")),n=a.a.createElement("div",{className:"content"},a.a.createElement("h2",null,"Kruskal's Algorithm"),a.a.createElement("p",null,"Kruskal's algorithm finds a Minimum Spanning Tree (MST) by examining every edge at once, and adding the lowest weight edges which do not create cycles to the graph. The algorithm is complete once all of the nodes are connected."),a.a.createElement("p",null,"More detailed info can be found"," ",a.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Kruskal%27s_algorithm",target:"blank"},"here")),a.a.createElement("p",null,"Click below to get started."));return this.props.algo.includes("prim")&&(e=t),this.props.algo.includes("kruskal")&&(e=n),e}}]),t}(r.Component),k=(n(20),function(e){var t=e.x,n=e.y,r=e.label,i=e.selected,s=void 0!==i&&i;return a.a.createElement("g",null,a.a.createElement("circle",{cx:t,cy:n,r:20,stroke:s?"black":"blue",strokeWidth:4,fill:s?"red":"#61dafb"}),a.a.createElement("text",{x:t-5,y:n+5},r))}),p=function(e){var t=e.selected,n=void 0!==t&&t,r=e.weight,i=void 0===r?1:r,s=e.x1,l=e.x2,o=e.y1,c=e.y2,u=(l+s)/2-((s<l?(c-o)/(l-s):s>l?(o-c)/(s-l):void 0)<0?6:0),h=(c+o)/2;return a.a.createElement("g",null,a.a.createElement("line",{stroke:n?"red":"black",strokeWidth:"4",x1:s,x2:l,y1:o,y2:c}),a.a.createElement("text",{x:u,y:h,fill:"#61dafb"},i))},v=function(){function e(){Object(l.a)(this,e),this.vertices=new Map,this.edges=new Map}return Object(o.a)(e,[{key:"addVertex",value:function(e){return this.vertices.has(e.key)||this.vertices.set(e.key,e),this}},{key:"getVertexByKey",value:function(e){if(this.vertices.has(e))return this.vertices.get(e)}},{key:"getNeighbors",value:function(e){return e.neighbors}},{key:"getAllVertices",value:function(){return Array.from(this.vertices.values())}},{key:"getAllEdges",value:function(){return Array.from(this.edges.values())}},{key:"addEdge",value:function(e){var t=this.getVertexByKey(e.startVertex.key),n=this.getVertexByKey(e.endVertex.key);if(t||(this.addVertex(e.startVertex),t=this.getVertexByKey(e.startVertex.key)),n||(this.addVertex(e.endVertex),n=this.getVertexByKey(e.endVertex.key)),this.edges.has(e.key))throw new Error("Edge has already been added before");return this.edges.set(e.key,e),t.addEdge(e),n.addEdge(e),this}},{key:"deleteEdge",value:function(e){if(!this.edges.has(e.key))throw new Error("Edge not found in graph");this.edges.delete(e.key);var t=this.getVertexByKey(e.startVertex.key),n=this.getVertexByKey(e.endVertex.key);t.deleteEdge(e),n.deleteEdge(e)}},{key:"findEdge",value:function(e,t){var n=this.getVertexByKey(e.key);if(n)return n.findEdge(t)}},{key:"findVertexByKey",value:function(e){if(this.vertices.has(e))return this.vertices.get(e)}},{key:"getVerticesKeys",value:function(){return Array.from(this.vertices.keys())}},{key:"weight",get:function(){return this.getAllEdges().reduce(function(e,t){return e+t.weight},0)}},{key:"order",get:function(){return this.vertices.size}},{key:"size",get:function(){return this.edges.size}}]),e}(),x=function(){function e(t,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;Object(l.a)(this,e),this.startVertex=t,this.endVertex=n,this.weight=r}return Object(o.a)(e,[{key:"reverse",value:function(){var e=this.startVertex;return this.startVertex=this.endVertex,this.endVertex=e,this}},{key:"key",get:function(){var e=this.startVertex.key,t=this.endVertex.key;return"".concat(e,"_").concat(t)}}]),e}(),E=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;if(Object(l.a)(this,e),void 0===t)throw new Error("Vertex must have a key");this.key=t,this.x=n,this.y=r,this.edges=[]}return Object(o.a)(e,[{key:"getEdges",value:function(){return Array.from(this.edges.values())}},{key:"addEdge",value:function(e){return this.edges.includes(e)||this.edges.push(e),this}},{key:"deleteEdge",value:function(e){this.edges=this.edges.filter(function(t){return t!==e})}},{key:"deleteAllEdges",value:function(){return this.edges=[],this}},{key:"hasEdge",value:function(e){return this.edges.includes(e)}},{key:"hasNeighbor",value:function(e){return this.neighbors.includes(e)}},{key:"findEdge",value:function(e){return this.edges.find(function(t){return t.startVertex===e||t.endVertex===e})}},{key:"degree",get:function(){return this.edges.length}},{key:"neighbors",get:function(){var e=this;return this.edges.map(function(t){return t.startVertex===e?t.endVertex:t.startVertex}).sort(function(e,t){return e.key.toLowerCase()<t.key.toLowerCase()?-1:e.key.toLowerCase()>t.key.toLowerCase()?1:0}).filter(function(e,t,n){return e!==n[t-1]})}}]),e}(),w=function(e){function t(){return Object(l.a)(this,t),Object(c.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(o.a)(t,[{key:"render",value:function(){return a.a.createElement("svg",{className:"graph",width:"450",height:"450",xmlns:"http://www.w3.org/2000/svg"},this.props.children)}}]),t}(r.Component),b={vertices:[{label:"A",x:175,y:70},{label:"B",x:110,y:150},{label:"C",x:260,y:150},{label:"D",x:205,y:220},{label:"E",x:330,y:300},{label:"F",x:140,y:365}],edges:[{endpoints:["A","B"],weight:4},{endpoints:["A","C"],weight:2},{endpoints:["B","C"],weight:1},{endpoints:["B","D"],weight:5},{endpoints:["C","D"],weight:8},{endpoints:["C","E"],weight:10},{endpoints:["D","E"],weight:2},{endpoints:["D","F"],weight:6},{endpoints:["E","F"],weight:5}]};var V=function(e,t){return e.weight-t.weight<0?-1:e.weight-t.weight>0?1:0},O=n(6);var j=function(e,t){return e.weight-t.weight<0?-1:e.weight-t.weight>0?1:0},A=(n(22),function(e){function t(e){var n;return Object(l.a)(this,t),(n=Object(c.a)(this,Object(u.a)(t).call(this,e))).onAlgoSelect=function(e){return function(){n.setState({algorithm:e.toLowerCase()})}},n.onAlgoConfirm=function(){n.setState({showAlgoSelector:!1,showAlgoDescription:!0})},n.showMST=function(){n.setState({showAlgoDescription:!1,algorithmComplete:!0})},n.state={graph:null,primTree:null,kruskalTree:null,algorithm:"",showAlgoSelector:!0,showAlgoDescription:!1,algorithmComplete:!1},n}return Object(h.a)(t,e),Object(o.a)(t,[{key:"componentDidMount",value:function(){var e=new v;b.vertices.forEach(function(t){var n=new E(t.label,t.x,t.y);e.addVertex(n)}),b.edges.forEach(function(t){var n=e.getVertexByKey(t.endpoints[0]),r=e.getVertexByKey(t.endpoints[1]),a=new x(n,r,t.weight);e.addEdge(a)});var t=function(e,t){var n=new v,r=new Map,a="object"==typeof t?t:e.getAllVertices()[0];r.set(a.key,a);for(var i=a.getEdges().sort(V);n.order<e.order;){var s=i.shift(),l=null;r.has(s.startVertex.key)?r.has(s.endVertex.key)||(l=s.endVertex):l=s.startVertex,l&&(n.addEdge(s),r.set(l.key,l),l.getEdges().forEach(function(e){r.has(e.startVertex.key)&&r.has(e.endVertex.key)||i.push(e)}),i.sort(V))}return n}(e),n=function(e){var t=new v;e.getAllVertices().forEach(function(e){return t.addVertex(e)});for(var n=e.getAllEdges().sort(j),r=e.getVerticesKeys().map(function(e){return[e]}),a=function(){var e=n.shift(),a=r.find(function(t){return t.includes(e.startVertex.key)}),i=r.find(function(t){return t.includes(e.endVertex.key)});if(r.indexOf(a)!=r.indexOf(i)){r.indexOf(a),r.indexOf(i);var s=Object(O.a)(a).concat(Object(O.a)(i));r.splice(r.indexOf(a),1,s),r.splice(r.indexOf(i),1),t.addEdge(e)}};r.length>1;)a();return t}(e);this.setState({graph:e,primTree:t,kruskalTree:n})}},{key:"render",value:function(){var e=this.state,t=e.algorithm,n=e.showAlgoSelector,r=e.showAlgoDescription,i=e.graph,s=e.primTree,l=e.kruskalTree,o=e.algorithmComplete,c=i;return o&&(t.includes("prim")&&(c=s),t.includes("kruskal")&&(c=l)),a.a.createElement("div",{className:"App"},a.a.createElement(d,null),a.a.createElement(g,null,a.a.createElement("main",{className:"main"},a.a.createElement("div",{className:"grapharea column"},a.a.createElement(w,null,i&&c.getAllEdges().map(function(e){return a.a.createElement(p,{key:e.key,x1:e.startVertex.x,x2:e.endVertex.x,y1:e.startVertex.y,y2:e.endVertex.y,weight:e.weight})}),i&&c.getAllVertices().map(function(e){return a.a.createElement(k,{key:e.key,x:e.x,y:e.y,label:e.key})}))),a.a.createElement("div",{className:"textarea column"},n&&a.a.createElement(m,{algorithms:["Prim's","Kruskal's"],selectedAlgorithm:t,onSelect:this.onAlgoSelect,onConfirm:this.onAlgoConfirm}),r&&[a.a.createElement(y,{algo:t}),a.a.createElement("div",{className:"buttonarea"},a.a.createElement(f,{onClick:this.showMST,label:"Get Results"}))],o&&a.a.createElement("div",null,a.a.createElement("h2",null,"Complete!"),a.a.createElement("p",null,"MST weight: ","".concat(c.weight)),a.a.createElement("p",null,"Edge selection order:"," ",c.getAllEdges().map(function(e){return e.key}).join(", ")))))))}}]),t}(r.Component));s.a.render(a.a.createElement(A,null),document.getElementById("root"))}],[[9,2,1]]]);
//# sourceMappingURL=main.417dc9d5.chunk.js.map